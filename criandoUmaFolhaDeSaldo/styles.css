/* 

(28)
Hora de estilizar a sua tabela. Comece redefinindo o modelo de caixa. 
Crie um seletor html e dê a ele uma propriedade box-sizing definida como border-box.

(29)
Crie um seletor body e dê a ele a propriedade font-family definida como sans-serif e a propriedade color definida como #0a0a23.


(30)
Antes de irmos muito mais longe na estilização, devemos usar a classe sr-only. 
Você pode usar o CSS para tornar os elementos dessa classe completamente ocultos na página visual, 
mas ainda podendo ser anunciados pelos leitores de tela.

O CSS que você está prestes a escrever é um conjunto comum de propriedades usadas para garantir que os elementos 
estejam completamente ocultos visualmente.

O seletor span[class~="sr-only"] selecionará qualquer elemento span cujo atributo class inclua sr-only. 
Crie esse seletor e dê a ele uma propriedade border definida como 0.

(31)
A propriedade clip do CSS é usada para definir porções visíveis de um elemento. 
Defina o seletor span[class~="sr-only"] para que tenha uma propriedade clip de rect(1px, 1px, 1px, 1px).

A propriedade clip-path determina a forma que a propriedade clip receberá. 
Defina a propriedade clip-path para que tenha o valor inset(50%), deixando o clip-path na forma de um retângulo dentro do elemento.

(32)
Agora, você precisa reduzir esses elementos. 
Dê ao seletor span[class~="sr-only"] as propriedades width e height definidas como 1px.

(33)
Para evitar que o conteúdo do texto exceda os limites, dê ao seletor span[class~="sr-only"] 
uma propriedade overflow definida como hidden e uma propriedade white-space definida como nowrap.


(34)
Por último, é necessário retirar estes elementos ocultos do fluxo do documento. Dê ao seletor span[class~="sr-only"] 
a propriedade position definida como absolute, a propiedade padding definida como 0 e a propriedade margin definida como -1px. 
Isso garantirá que não somente eles deixaram de ser visíveis, como também não estarão sequer na exibição de página.

(35)
Hora de estilizar o cabeçalho da tabela. Crie um seletor h1. Dê a ele uma propriedade max-width definida como 37.25rem, 
uma propriedade margin definida como 0 auto e uma propriedade padding definida como 1.5rem 1.25rem.

(36)
Selecione o contêiner flex com um seletor h1 .flex. Dê a ele uma propriedade display definida como flex para ativar o layout do flexbox. 
Então, defina a propriedade flex-direction como column-reverse - isso exibirá os elementos aninhados da parte inferior para a superior. 
Por fim, defina a propriedade gap como 1rem para fornecer mais espaçamento entre os elementos.

(37)
O pseudosseletor :first-of-type é utilizado para focar no primeiro elemento que corresponde ao seletor. 
Crie um seletor h1 .flex span:first-of-type para escolher o primeiro elemento span no contêiner .flex. 
Lembre-se de que os elementos span estão invertidos visualmente, então esse parecerá ser o segundo elemento na página.

Dê ao novo seletor uma propriedade font-size de 0.7em para que ele pareça com um subtítulo.

(38)
O pseudosseletor :last-of-type é utilizado para focar exatamente o oposto: o último elemento que corresponde ao seletor. 
Crie um seletor h1 .flex span:last-of-type para focar no último span em seu contêiner flex 
e dê a ele uma propriedade font-size definida como 1.2em para que se pareça com um cabeçalho.

(39)
Você envolveu a tabela em um elemento de seção - agora você pode estilizá-la para dar a ela uma borda. 
Crie um seletor section e dê a ele uma propriedade max-width definida como 40rem para deixar o design responsivo. 
Defina a propriedade margin como 0 auto para centralizá-la e defina a propriedade border como 2px solid #d0d0d5.

(40)
A última parte da tabela são os anos. Crie um seletor #years e ative o flexbox. 
Justifique o conteúdo para o final da direção do flex e faça com que o elemento permaneça no lugar. 
Prenda o elemento na parte superior do contêiner com top: 0.

(41)
Agora, aplique uma cor a #years. Dê ao texto a cor #fff e o fundo #0a0a23.

(42)
A função calc() é uma função do CSS que permite calcular um valor baseado em outros valores. 
Por exemplo, você pode usá-la para calcular a largura da viewport menos a margem de um elemento:

.example {
  margin: 10px;
  width: calc(100% - 20px);
}

Dê ao elemento #years uma margin de 0 -2px e um padding definido como 0.5rem calc(1.25rem + 2px) 0.5rem 0.

(43)
Adicionar a position sticky moveu o elemento para sua própria pilha. 
Para garantir que seu elemento #years não fique escondido por pilhas diferentes, 
adicione uma propriedade z-index definida como 999 na regra #years.



*/

html{
    box-sizing: border-box;         /*28*/
}

body{
    font-family: sans-serif;      /*29*/     
    color: #0a0a23;             /*29*/
}

span[class~="sr-only"]{           
    border: 0;                                  /*30*/
    clip: rect(1px, 1px, 1px, 1px);             /*31*/
    clip-path: inset(50%);                      /*31*/
    width: 1px;                                 /*32*/
    height: 1px;                                /*32*/
    overflow: hidden;                           /*33*/
    white-space: nowrap;                        /*33*/
    position: absolute;                         /*34*/
    padding: 0;                                 /*34*/
    margin: -1px;                               /*34*/

}

h1 {
    max-width: 37.25rem;          /*35*/
    margin: 0 auto;               /*35*/
    padding: 1.5rem 1.25rem;      /*35*/
  }

  h1 .flex {                                /*36*/
    display: flex;                          /*36*/
    flex-direction: column-reverse;         /*36*/
    gap: 1rem;                              /*36*/
  }

  h1 .flex span:first-of-type {             /*37*/
    font-size: 0.7em;                       /*37*/
  }

  h1 .flex span:last-of-type {              /*38*/
    font-size: 1.2em;                       /*38*/
  }

  section {                                 /*39*/
    max-width: 40rem;                       /*39*/
    margin: 0 auto;                         /*39*/
    border: 2px solid #d0d0d5;            /*39*/
  }

  #years {
    display: flex;                                  /*40*/
    justify-content: flex-end;                      /*40*/
    position: sticky;                               /*40*/
    top: 0;                                         /*40*/
    color: #fff;                                  /*41*/
    background-color: #0a0a23;                    /*41*/
    margin: 0 -2px;                                 /*42*/
    padding: 0.5rem calc(1.25rem + 2px) 0.5rem 0;   /*42*/
    z-index: 999;                                   /*43*/
  }