/* Passo 7
Você pode ver o body (ele é a caixa mais interna na página); a caixa em torno dele é o elemento html. Faça o body preencher toda a viewport dando a ele uma height de 100vh. Remova a margin padrão do body definindo a margin como 0. Finalmente, defina a propriedade overflow como hidden para ocultar quaisquer barras de rolagem que aparecem quando algo se estende além da janela de visualização.

Passo 14
Agora você tem algo que começa a se parecer com um edifício. Você está pronto para criar sua primeira variável. Declarações de variáveis começam com dois traços (-) e recebem um nome e um valor como este: --variable-name: value;. Na regra para a classe bb1, crie uma variável chamada --building-color1 e dê a ela um valor de #999.

Passo 15
Para usar uma variável, coloque o nome da variável entre parênteses precedidos pela palavra var desta forma: var(--variable-name). Não importa o valor que você forneceu à variável, ele será aplicado a qualquer propriedade que você usar.

Adicione a variável --building-color1 que você criou no passo anterior como o valor da propriedade background-color da classe .bb1a.

Passo 17
Altere o valor da variável de #999 para #aa80ff e você poderá ver como ela é aplicada em todos os lugares em que você usou a variável. Esta é a principal vantagem do uso de variáveis, podendo alterar rapidamente muitos valores na folha de estilo apenas alterando o valor de uma variável.

Passo 23
Isso não funcionou. Você deve adicionar um valor substituto para uma variável colocando-o como o segundo valor de onde você usa a variável desta maneira: var(--variable-name, fallback-value). A propriedade usará o valor substituto quando houver um problema com a variável. Adicione um valor substituto green à background-color de .bb2.

Passo 25
Isso não funcionou, pois as variáveis que você declarou em .bb1 não são reproduzidas nos elementos irmãos .bb2 e .bb3. É assim que o CSS funciona. Por causa disso, as variáveis são frequentemente declaradas no seletor :root. Esse é o seletor de nível mais alto no CSS; colocar as variáveis lá as tornará utilizáveis em todos os lugares. Adicione o seletor :root ao topo da folha de estilos e mova todas as váriaveis declaráveis para lá.

Passo 26
Agora que você resolveu os erros e os prédios estão com a cor correta, você pode remover os valores alternativos (de fallback) nos dois lugares em que eles foram usados. Vá em frente e faça isso agora.

Passo 33
Você deve otimizar o código. Mova as propriedades position e top e valores de .foreground-buildings para .background-buildings. Em seguida, selecione ambos .background-buildings e .foreground-buildings por lá, efetivamente aplicando esses estilos a ambos os elementos. Você pode usar uma vírgula (,) para separar seletores como este: selector1, selector2

Passo 37
Move a posição de .fb4 em relação a onde está agora adicionando uma position relative e left de 10% a ele. Faça o mesmo para .fb5, mas use right em vez de left. Isto encobrirá o espaço em branco restante entre os edifícios.

Passo 38
O código está começando a ficar bem longo. Adicionar um comentário acima da classe .fb1 que diz FOREGROUND BUILDINGS - "fb" stands for "foreground building" para ajudar as pessoas a entenderem o código. Acima da classe .bb1 adicione outro comentário que diz BACKGROUND BUILDINGS - "bb" stands for "background building".
Passo 40
Os gradientes em CSS são uma forma de transição entre as cores através da distância de um elemento. Eles são aplicados à propriedade background e a sintaxe tem essa aparência:

gradient-type(
  var(color1),
  var(color2)
);
No exemplo, color1 é sólido no topo, color2 é sólido na parte inferior, e entre elas as transições acontecem igualmente de uma para a outra. Em .bb1a, adicione uma propriedade background abaixo da propriedade background-color. Defina-a como um gradiente do tipo linear-gradient, que usa --building-color1 como a primeira cor e --window-color1 como a segunda.

Passo 41
Você quer adicionar o mesmo gradiente às próximas duas seções. Em vez de fazer isso, crie um seletor de classe chamado bb1-window e mova as propriedades de valores de height e background de .bb1a para o novo seletor de classe.

Passo 46
Você pode especificar onde você deseja completar uma transição gradiente adicionando-a à cor como esta:

gradient-type(
  orange,
  var( )20%,
  var( )
);
Aqui, ele mudará de color1 para color2 entre 0% e 20% do elemento e depois mudar para color3 para o resto. Adicione 80% à cor --building-color1 do gradiente .bb1d para que você possa vê-lo em ação.

Passo 47
Remova orange do gradiente de .bb1d e altere o valor de 80% para 50%. Isso fará com que --building-color1 seja sólida para a metade superior e depois mude para --window-color1 na metade inferior.

Passo 51
As transições gradientes muitas vezes mudam gradualmente de uma cor para outra. Você pode fazer a alteração uma linha sólida como esta:

linear-gradient(
  var(--first-color) 0%,
  var(--first-color) 40%,
  var(--second-color) 40%,
  var(--second-color) 80%
);
No .bb2b, adicione um linear-gradient que usa --building-color2 de 0% a 6% e --window-color2 de 6% a 9%.

*/

:root {
  --building-color1: #aa80ff; /*25*/
  --building-color2: #66cc99; /*25*/
  --building-color3: #cc6699; /*25*/
  --building-color4: #538cc6;
  --window-color1: black;
  --window-color2: #8cd9b3;
}

* {
    border: 1px solid black;
    box-sizing: border-box;
}

body {
    height: 100vh;                    /*7*/
    margin: 0;                        /*7*/
    overflow: hidden;                 /*7*/
}

.background-buildings, .foreground-buildings {                        /*33*/
    width: 100%;
    height: 100%;
    position: absolute;                                               /*33*/
    top: 0;                                                           /*33*/
    display: flex;
    align-items: flex-end;
    justify-content: space-evenly;

}
/*FOREGROUND BUILDINGS - "fb" stands for "foreground   building"*/
.bb1 {
    width: 10%;
    height: 70%;
    display: flex;
    flex-direction: column;
    align-items: center;
    
  }

  .bb1-window {
    height: 10%;
    background: linear-gradient(
        var(--building-color1),
        var(--window-color1)
      );
  }

.bb1a {
    width: 70%;
    
  }
  
  .bb1b {
    width: 80%;
  
  }
  
  .bb1c {
    width: 90%;
    
  }
  
  .bb1d {
    width: 100%;
    height: 70%;
    background: linear-gradient(
      var(--building-color1)50%, /*46*/ /*47*/
      var(--window-color1)
    );
  }

  .bb2 {
    width: 10%;
  height: 50%;
  background-color: var(--building-color2); /* 23*/
  }
  
  .bb2b {
    width: 100%;
    height: 100%;
    background: linear-gradient (       /*51*/
    var(--building-color2) 0%,          /*51*/
    var(--building-color2) 6%,          /*51*/
    var(--window-color2) 6%,            /*51*/
    var(--window-color2) 9%             /*51*/
  )
  }
  
  .bb3 {
    width: 10%;
    height: 55%;
    background-color: var(--building-color3);
  }
  
  
  .bb4 {
    width: 11%;
    height: 58%;
    background-color: var(--building-color4);
  }
/*FOREGROUND BUILDINGS - "fb" stands for "foreground building"*/
  .fb1 {
    width: 10%;
    height: 60%;
    background-color: var(--building-color4);
  }
  
  .fb2 {
    width: 10%;
    height: 40%;
    background-color: var(--building-color3)
  }
  
  .fb3 {
    width: 10%;
    height: 35%;
    background-color: var(--building-color1);
  }
  
  .fb4 {
    width: 8%;
    height: 45%;
    background-color: var(--building-color1);
    position: relative;
    left: 10%;
  }
  
  .fb5 {
    width: 10%;
    height: 33%;
    background-color: var(--building-color2);
    position: relative;
    right: 10%;
  }
  
  .fb6 {
    width: 9%;
    height: 38%;
    background-color: var(--building-color3);
  }
  
  