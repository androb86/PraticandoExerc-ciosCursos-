/* Passo 7
Você pode ver o body (ele é a caixa mais interna na página); a caixa em torno dele é o elemento html. Faça o body preencher toda a viewport dando a ele uma height de 100vh. Remova a margin padrão do body definindo a margin como 0. Finalmente, defina a propriedade overflow como hidden para ocultar quaisquer barras de rolagem que aparecem quando algo se estende além da janela de visualização.

Passo 14
Agora você tem algo que começa a se parecer com um edifício. Você está pronto para criar sua primeira variável. Declarações de variáveis começam com dois traços (-) e recebem um nome e um valor como este: --variable-name: value;. Na regra para a classe bb1, crie uma variável chamada --building-color1 e dê a ela um valor de #999.

Passo 15
Para usar uma variável, coloque o nome da variável entre parênteses precedidos pela palavra var desta forma: var(--variable-name). Não importa o valor que você forneceu à variável, ele será aplicado a qualquer propriedade que você usar.

Adicione a variável --building-color1 que você criou no passo anterior como o valor da propriedade background-color da classe .bb1a.

Passo 17
Altere o valor da variável de #999 para #aa80ff e você poderá ver como ela é aplicada em todos os lugares em que você usou a variável. Esta é a principal vantagem do uso de variáveis, podendo alterar rapidamente muitos valores na folha de estilo apenas alterando o valor de uma variável.

Passo 23
Isso não funcionou. Você deve adicionar um valor substituto para uma variável colocando-o como o segundo valor de onde você usa a variável desta maneira: var(--variable-name, fallback-value). A propriedade usará o valor substituto quando houver um problema com a variável. Adicione um valor substituto green à background-color de .bb2.

Passo 25
Isso não funcionou, pois as variáveis que você declarou em .bb1 não são reproduzidas nos elementos irmãos .bb2 e .bb3. É assim que o CSS funciona. Por causa disso, as variáveis são frequentemente declaradas no seletor :root. Esse é o seletor de nível mais alto no CSS; colocar as variáveis lá as tornará utilizáveis em todos os lugares. Adicione o seletor :root ao topo da folha de estilos e mova todas as váriaveis declaráveis para lá.

Passo 26
Agora que você resolveu os erros e os prédios estão com a cor correta, você pode remover os valores alternativos (de fallback) nos dois lugares em que eles foram usados. Vá em frente e faça isso agora.

Passo 33
Você deve otimizar o código. Mova as propriedades position e top e valores de .foreground-buildings para .background-buildings. Em seguida, selecione ambos .background-buildings e .foreground-buildings por lá, efetivamente aplicando esses estilos a ambos os elementos. Você pode usar uma vírgula (,) para separar seletores como este: selector1, selector2

Passo 37
Move a posição de .fb4 em relação a onde está agora adicionando uma position relative e left de 10% a ele. Faça o mesmo para .fb5, mas use right em vez de left. Isto encobrirá o espaço em branco restante entre os edifícios.

Passo 38
O código está começando a ficar bem longo. Adicionar um comentário acima da classe .fb1 que diz FOREGROUND BUILDINGS - "fb" stands for "foreground building" para ajudar as pessoas a entenderem o código. Acima da classe .bb1 adicione outro comentário que diz BACKGROUND BUILDINGS - "bb" stands for "background building".
Passo 40
Os gradientes em CSS são uma forma de transição entre as cores através da distância de um elemento. Eles são aplicados à propriedade background e a sintaxe tem essa aparência:

gradient-type(
  var(color1),
  var(color2)
);
No exemplo, color1 é sólido no topo, color2 é sólido na parte inferior, e entre elas as transições acontecem igualmente de uma para a outra. Em .bb1a, adicione uma propriedade background abaixo da propriedade background-color. Defina-a como um gradiente do tipo linear-gradient, que usa --building-color1 como a primeira cor e --window-color1 como a segunda.

Passo 41
Você quer adicionar o mesmo gradiente às próximas duas seções. Em vez de fazer isso, crie um seletor de classe chamado bb1-window e mova as propriedades de valores de height e background de .bb1a para o novo seletor de classe.

Passo 46
Você pode especificar onde você deseja completar uma transição gradiente adicionando-a à cor como esta:

gradient-type(
  orange,
  var( )20%,
  var( )
);
Aqui, ele mudará de color1 para color2 entre 0% e 20% do elemento e depois mudar para color3 para o resto. Adicione 80% à cor --building-color1 do gradiente .bb1d para que você possa vê-lo em ação.

Passo 47
Remova orange do gradiente de .bb1d e altere o valor de 80% para 50%. Isso fará com que --building-color1 seja sólida para a metade superior e depois mude para --window-color1 na metade inferior.

Passo 51
As transições gradientes muitas vezes mudam gradualmente de uma cor para outra. Você pode fazer a alteração uma linha sólida como esta:

linear-gradient(
  var(--first-color) 0%,
  var(--first-color) 40%,
  var(--second-color) 40%,
  var(--second-color) 80%
);
No .bb2b, adicione um linear-gradient que usa --building-color2 de 0% a 6% e --window-color2 de 6% a 9%.

Passo 52
Você pode ver a cor mudar no topo da seção. Altere o tipo gradiente de linear-gradient para repeating-linear-gradient para esta seção. Isso fará com que as quatro cores do gradiente se repitam até chegar à parte inferior do elemento, dando-lhe algumas listras e evitando a necessidade de adicionar vários elementos para criá-las.

passo para transformar o topo do predio em triangulo
Passo 56
Em seguida, altere os dois #999 de .bb2a para transparent. Isto tornará as bordas da esquerda e da direita invisíveis.

Passo 57
Remover as propriedades e valores margin e border-top do elemento .bb2a para transformá-lo em um triângulo para o topo do edifício.

Passo 60
Até agora, todos os gradientes que você criou foram de cima para baixo. Essa é a direção padrão. Você pode especificar outra direção, adicionando-a antes das cores, veja o exemplo:

gradient-type(
  direction,
  color1,
  color2
);
Preencha .bb3 com repeating-linear-gradient. Use 90deg para a direção, com building-color3 para as duas primeiras cores e window-color3 a 15% para a terceira. Quando você não especificar uma distância para uma cor, ela usará os valores que fazem sentido. Neste caso, as duas primeiras cores estarão por padrão entre 0% e 7.5%, porque começam em 0% e 7.5% é metade dos 15%.

Passo 65
Você quer que .bb4 compartilhe as propriedades de .bb1 que centralizam as seções. Em vez de duplicar esse código, crie uma classe acima do comentário do plano de fundo do prédio chamado building-wrap. Deixe-o em branco por enquanto. Esta classe será usada em alguns lugares para agilizar seu tempo.

Passo 66
Mova as propriedades e valores de display, flex-direction e align-items de .bb1 para a nova classe building-wrap.

Passo 67 adicionando building-wrap na divs bb1, bb4

Passo 71
As janelas estão empilhadas em cima umas das outras à esquerda da seção, atrás do edifício roxo. Adicione uma nova classe abaixo do .building-wrap chamado window-wrap. Faça .window-wrap um contêiner de flexbox, use as propriedades align-items e justify-content para centralizar os elementos filhos verticalmente, bem como espaçá-los igualmente em seus pais, respectivamente.

Passo 72
adicione a classe window-wrap na div bb4c

Passo 79
Você vai usar mais alguns truques de borda para a seção superior. Adicione um border-bottom com um valor de 7vh solid var(--building-color4) to .fb1a. Isto colocará uma borda de 7vh de altura na parte inferior. Mas como o elemento tem tamanho zero, só aparece como uma linha de 2px de largura da borda de 1px que está em todos os elementos.


Passo 80
Quando se aumenta o tamanho das bordas da esquerda e da direita, a borda inferior vai expandir e ocupar a largura das larguras combinadas da esquerda e da direita. Adicione 2vw solid transparent como o valor das propriedades border-left e border-right de .fb1a. Eles serão invisíveis, mas deixarão a borda na parte inferior com 4vw de largura.

Passo 87
Para .fb2a, adicione uma border-bottom de 10vh solid var(--building-color3), uma border-left e uma border-right de 1vw solid transparent. Desta vez, o truque de borda vai criar uma forma de trapezoides.

Passo 95
Com as variáveis do CSS, você pode alterar valores sem pesquisar em todos os lugares da folha de estilos. Altere o valor de --window-color1 para #bb99ff.

Passo 100
Dê aos elementos .fb4-window uma width de 30%, uma height de 10% e um border-radius de 50%. Isso criará algumas janelas circulares para esse prédio.

*/



:root {
  --building-color1: #aa80ff; /*25*/
  --building-color2: #66cc99; /*25*/
  --building-color3: #cc6699; /*25*/
  --building-color4: #538cc6;
  --window-color1: #bb99ff;
  --window-color2: #8cd9b3;
  --window-color3: #d98cb3;
  --window-color4: #8cb3d9;
}

* {
    border: 1px solid black;
    box-sizing: border-box;
}

body {
    height: 100vh;                    /*7*/
    margin: 0;                        /*7*/
    overflow: hidden;                 /*7*/
}

.background-buildings, .foreground-buildings {                        /*33*/
    width: 100%;
    height: 100%;
    position: absolute;                                               /*33*/
    top: 0;                                                           /*33*/
    display: flex;
    align-items: flex-end;
    justify-content: space-evenly;

}
.building-wrap {                     /*65, 66*/
  display: flex;
  flex-direction: column;
  align-items: center;
}

.window-wrap {
  display: flex;
  align-items: center;
  justify-content: space-evenly;

}

/*FOREGROUND BUILDINGS - "fb" stands for "foreground   building"*/
.bb1 {
    width: 10%;
    height: 70%;
    
  }

  .bb1-window {
    height: 10%;
    background: linear-gradient(
        var(--building-color1),
        var(--window-color1)
      );
  }

.bb1a {
    width: 70%;
    
  }
  
  .bb1b {
    width: 80%;
  
  }
  
  .bb1c {
    width: 90%;
    
  }
  
  .bb1d {
    width: 100%;
    height: 70%;
    background: linear-gradient(
      var(--building-color1)50%, /*46*/ /*47*/
      var(--window-color1)
    );
  }

  .bb2 {
    width: 10%;
  height: 50%;
                                         /* 23, 53(remover-background-color)*/ 
  }

  .bb2a{
    
    border-bottom: 5vh solid var(--building-color2); 
    border-left: 5vw solid transparent;      /*56*/
    border-right: 5vw solid transparent;     /*56*/
   }
  
  .bb2b {
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(       /*51*/ /*52*/
    var(--building-color2),              /*51*/
    var(--building-color2) 6%,           /*51*/
    var(--window-color2) 6%,             /*51*/
    var(--window-color2) 9%              /*51*/
  )
  }
  
  .bb3 {
    width: 10%;
    height: 55%;
    background: repeating-linear-gradient(        /*60*/
      90deg,
      var(--building-color3),
      var(--building-color3),
      var(--window-color3) 15%
    );
  }
  
  
  .bb4 {
    width: 11%;
    height: 58%;
    
  }

  .bb4a {
    width: 3%;
    height: 10%;
    background-color: var(--building-color4);
  }
  .bb4b {
    width: 80%;
    height: 5%;
    background-color: var(--building-color4);
  }
  .bb4c {
    width: 100%;
    height: 85%;
    background-color: var(--building-color4);
  }

  .bb4-window{
    width: 18%;
    height: 90%;
    background-color: var(--window-color4); 
  }

/*FOREGROUND BUILDINGS - "fb" stands for "foreground building"*/
  .fb1 {
    width: 10%;
    height: 60%;
    
  }

  .fb1a {
    border-bottom: 7vh solid var(--building-color4);  /*79*/
    border-left: 2vw solid transparent;               /*80*/
  border-right: 2vw solid transparent;                /*80*/
  }

  .fb1b {
    width: 60%;
    height: 10%;
    background-color: var(--building-color4);
  }
  .fb1c {
    width: 100%;
    height: 80%;
    background: repeating-linear-gradient(
    90deg,
    var(--building-color4),
      var(--building-color4) 10%,
      transparent 10%,
      transparent 15%
    ),

    repeating-linear-gradient(
      var(--building-color4),
      var(--building-color4) 10%,
      var(--window-color4) 10%,
      var(--window-color4) 90%
    );
  }
  
  .fb2 {
    width: 10%;
    height: 40%;
  }

  .fb2a {
    width: 100%;
    width: 100%;
    border-bottom: 10vh solid var(--building-color3);
    border-left: 1vw solid transparent;
    border-right: 1vw solid transparent;
  }
  
  .fb2b {
   width: 100%;
   height: 75%;
   background-color: var(--building-color3);
  }

  .fb2-window {
    width: 22%;
    height: 100%;
    background-color: var(--window-color3);
  }
  
  .fb3 {
    width: 10%;
    height: 35%;
    
  }

  .fb3a {
    width: 80%;
    height: 15%;
    background-color: var(--building-color1);
  }
  .fb3b {
    width: 100%;
    height: 35%;
    background-color: var(--building-color1);
  }

  .fb3-window {
    width: 25%;
    height: 80%;
    background-color: var(--window-color1);
  }
  
  .fb4 {
    width: 8%;
    height: 45%;
    position: relative;
    left: 10%;
  }

  .fb4b {
    width: 100%;
    height: 89%;
    background-color: var(--building-color1);
  }

  .fb4-window {
    width: 30%;
    height: 10%;
    border-radius: 50%;
  
  }
  
  .fb5 {
    width: 10%;
    height: 33%;
    background-color: var(--building-color2);
    position: relative;
    right: 10%;
  }
  
  .fb6 {
    width: 9%;
    height: 38%;
    background-color: var(--building-color3);
  }
  
  