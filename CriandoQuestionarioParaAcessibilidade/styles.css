/* (66) Ao clicar nos links de navegação, você deverá levar o viewport para a seção relevante. No entanto, essa passagem pode desorientar alguns usuários.
Selecione todos os elementos e defina o scroll-behavior para smooth.
*/

* {
    scroll-behavior: smooth;
}

body {
    background: #f5f6f7;
    color: #1b1b32;
    font-family: Helvetica;
    margin: 0;
}

/*Faça com que o header ocupe toda a largura de seu contêiner pai, 
defina sua height como 50px e defina a background-color para #1b1b32. 
Em seguida, defina o display para usar o Flexbox.*/

/* (48 )Arrume o header, usando Flexbox para acrescentar espaço entre os elementos filhos e centralizá-los verticalmente.
Em seguida, deixe o header fixo na parte superior do viewport.
ocê deve dar ao elemento header um justify-content de space-between. */

header {
    width: 100%;
    height: 50px;
    background-color: #1b1b32;
    display: flex;
    justify-content: space-between;  /* (48)*/
    align-items: center;             /* (48)*/
    position: fixed;                 /* (48)*/
    top: 0;                          /* (48)*/
}

/*Uma propriedade útil de um SVG (gráficos vetoriais escaláveis) é o atributo path (caminho), 
que permite que a imagem seja dimensionada sem afetar a resolução da imagem resultante.
Atualmente, o img está assumindo que é o tamanho padrão, o que é muito grande. Para arrumar, 
dimensione a imagem usando o id como seletor e defina a largura width como max(100px, 18vw).*/

/*Como descrito no guia de estilo do freeCodeCamp, 
o logotipo deve manter uma proporção de 35 / 4 e um preenchimento (padding) ao redor do texto.
Primeiro, altere a background-color para #0a0a23 para ver o logotipo. 
Em seguida, use a propriedade aspect-ratio para definir a proporção desejada de 35 / 4. 
Por fim, adicione um padding de 0.4rem ao redor.*/

#logo {
    width: max(100px, 18vw);
    background-color: #0a0a23;
    aspect-ratio: 35 / 4;
    padding: 0.4rem;
}



/*Altere a cor da fonte h1 para #f1be32, 
e defina o tamanho da fonte para min(5vw, 1.2em).*/

/* (49)Quando a largura da tela é pequena, o h1 não envolve seu conteúdo de texto como deveria. 
Alinhe ao centro o texto para o elemento h1.
ocê deve dar ao main um padding-top de pelo menos 25px.*/ 

h1 {
    color: #f1be32;
    font-size: min(5vw, 1.2em);
    text-align: center;   /* (49) */
    padding-top: 25px;    /* (49) */
}

nav {
    width: 50%;
    max-width: 300px;
    height: 50px;
  }

/*Marque os elementos da lista não ordenados dentro dos elementos nav e use Flexbox para espaçar igualmente os elementos filhos.*/

/* (50) Em telas pequenas, a lista não ordenada na barra de navegação transborda do lado direito da tela.
Corrija isso usando o Flexbox para encapsular o conteúdo do ul. Em seguida, 
defina as seguintes propriedades CSS para alinhar corretamente o texto: */

nav > ul {
    display: flex;
    justify-content: space-evenly;
    flex-wrap: wrap;            /* (50) */
    align-items: center;        /* (50) */
    padding-inline-start: 0;    /* (50) */
    margin-block: 0;            /* (50) */
    height: 100%;               /* (50) */

}

/*(45) Voltemos ao estilo da página. Selecione os elementos da lista dentro da barra de navegação, e dê a eles os seguintes estilos:

                    color: #dfdfe2;
                    margin: 0 0.2rem;
                    padding: 0.2rem;
                    display: block;

                    Você deve usar o seletor nav li ou nav > ul > li.

*/

nav > ul > li {
    color: #dfdfe2;
    margin: 0 0.2rem;
    padding: 0.2rem;
    display: block;

}



/* (46) No que se refere à acessibilidade visual, o contraste entre elementos é um fator fundamental. 
Por exemplo, o contraste entre o texto e o plano de fundo de um título deve ser pelo menos 4,5:1.
Altere a cor da fonte de todos os elementos "âncora" dentro dos elementos da lista
para algo com uma proporção de contraste de pelo menos 7:1.
Você deve dar ao elemento a uma propriedade color. */

/* (47) Para fazer com que os botões de navegação se pareçam mais com botões típicos, remova o sublinhado das tags de âncora.
Em seguida, crie um novo seletor direcionado aos elementos da lista de navegação, 
para que quando o cursor passe por cima deles, a cor de fundo e a cor do texto sejam alternados, 
e o cursor se torne um ponteiro. */

li > a {
    color: inherit;         /*(46)*/
    text-decoration: none;  /*(47)*/
}

main {
    padding-top: 50px;
}

/* (51) Defina a largura dos elementos section para 80% de seu contêiner pai. 
Em seguida, use as margens para centralizar os elementos section, adicionando 10px à margem inferior.
Além disso, certifique-se de que os elementos section não possam ter largura maior que 600px.  */

section {
    width: 80%;           /* (51)*/
    margin-right: auto;   /* (51)*/
    margin-top: 0;        /* (51)*/
    margin-bottom: 10px;  /* (51)*/
    margin-left: auto;    /* (51)*/
    max-width: 600px;     /* (51)*/
}

nav li:hover {
    background-color: #dfdfe2; /*(47)*/
    color: #1b1b32;
    cursor: pointer;
  }


/* O tipo de letra desempenha um papel importante na acessibilidade de uma página. 
Algumas fontes são mais fáceis de ler do que outras. 
Isso é especialmente verdadeiro em telas de baixa resolução.
Altere a fonte dos elementos h1 e h2 para Verdana e use outra fonte segura para a Web na família sans-serif como substituto.
Além disso, adicione um border-bottom de 4px solid #dfdfe2 aos elementos h2 para tornar as seções distintas. 
*Você deve definir o segundo valor da propriedade font-family para outra fonte sans-serif, fonte segura da web. Dica: eu escolheria Tahoma.*/

h1, h2 {
    font-family: Verdana, Tahoma;
}

/* (52) Substitua a margem superior dos elementos h2 por um padding superior de 60px  */

h2 {
    border-bottom: 4px solid #dfdfe2;
    margin-top: 0;                            /* (52) */
    padding-top: 60px;                       /* (52) */
}
/* Para prevenir repetição desnecessária, marque o pseudoelemento before do elemento p e dê a ele uma propriedade content de "Question #".
Você deve usar o seletor p::before. */

/* (53) Adicione o espaçamento ao canto superior e esquerdo dos elementos .info e defina os outros valores para 0. */

.info {
    padding-top: 10px;     /* (53) */
    padding-right: 0;     /* (53) */
    padding-bottom: 0;    /* (53) */
    padding-left: 5px;    /* (53) */
}

/* (54) Aplique padding à margem superior e aos blocos esquerdo e direito do elemento .formrow. Os outros valores de padding devem ser 0.
Em seguida, aumente o tamanho da fonte para todos os elementos input. */

.formrow {
    margin-top: 1px;      /* (54) */
    padding-top: 0;       /* (54) */
    padding-right: 0;     /* (54) */
    padding-bottom: 0;    /* (54) */
    padding-left: 1px;    /* (54) */
}

input {
    font-size: 13px;     /* (54) */
}

/* (57) Para alinhar as caixas de entrada umas com as outras, 
crie um novo conjunto de regras que envolva todos os elementos input e label dentro de um elemento .info 
e defina a propriedade display como inline-block.
Vocepode usar .info > label, .info > input ou .info label, .info input
Além disso, alinhe o texto do elemento label à direita. */

.info > label, .info > input {
    display: inline-block;          /* (57) */
    text-align: right;              /* (57) */
}

/* (55) Para dar uma aparência em linha à primeira seção, 
selecione apenas os elementos input dentro dos elementos .info, 
defina sua width como 50% e alinhe seu texto à esquerda. 

Você deve usar o seletor .info input ou .info > input.*/ 

.info input {
    width: 50%;         /* (55) */
    text-align: left;   /* (55) */
}

/* (56) Selecione todos os elementos label nos elementos .info, 
defina sua width como 10% e faça com que eles não ocupem menos de 55px. */

.info label {
    width: 10%;
    min-width: 55px;
    text-align: right;
}

/* (58) Para limpar os elementos .question-block, defina as seguintes propriedades de CSS:

text-align: left;
display: block;
width: 100%;
margin-top: 20px;
padding-top: 5px;    
*/

 .question-block{
    text-align: left;
    display: block;
    width: 100%;
    margin-top: 20px;
    padding-top: 5px;

 }

 /*  (59) Faça com que os elementos do parágrafo apareçam como uma prioridade mais alta, com as seguintes propriedades de CSS:

        margin-top: 5px;
        padding-left: 15px;
        font-size: 20px;

 */

 p{
    margin-top: 5px;
    padding-left: 15px;
    font-size: 20px;

 }


p::before {
    content: "Question #";
}

/* (60) É útil ver a borda padrão ao redor dos elementos fieldset durante o desenvolvimento. 
No entanto, pode não ser o estilo que você deseja.
Remova a borda e o preenchimento inferior nos elementos .question. */ 

.question {
    padding-bottom: 0;
    border: none;   /* ou -0 */   
}


/* (61) Remova o estilo padrão 
para os itens da lista de .answers-list e remova o preenchimento da lista não ordenada. */

.answers-list {
list-style: none;     /* (61) */
padding: 0;           /* (61) */  

}

/* (62) Dê ao botão enviar um design no estilo do freeCodeCamp, com as seguintes propriedades de CSS:

display: block;
margin: 40px auto;
width: 40%;
padding: 15px;
font-size: 23px;
background: #d0d0d5;
border: 3px solid #3b3b4f;
 */ 

 button {
    display: block;
    margin: 40px auto;
    width: 40%;
    padding: 15px;
    font-size: 23px;
    background: #d0d0d5;
    border: 3px solid #3b3b4f;
 }

    /* (63) Defina a cor de fundo do footer para #2a2a40 e use Flexbox para centralizar o texto horizontalmente*/

    footer { 
        background-color: #2a2a40;   /* (63) */
        display: flex;                 /* (63) */
        justify-content: center;       /* (63) */
    }

    /* (64) Agora, não podemos ler o texto. 
    Selecione o footer e o elemento de ancoragem dentro dele 
    para definir a cor da fonte para uma cor de relação de contraste adequada. */
 
    footer, footer a {
        color: #dfdfe2;
        
    }

/* (65) Centralize horizontalmente todo o texto dentro do elemento address e adicione algum preenchimento */

    address {
        text-align: center;
        padding-top: 1px;
        padding-right: 1px;
        padding-bottom: 1px;
        padding-left: 1px;
    }

/* O texto .sr-only ainda está visível. Existe um padrão comum para ocultar visualmente o texto para que apenas os leitores de tela leiam.

Este padrão é para definir as seguintes propriedades do CSS:

position: absolute;
width: 1px;
height: 1px;
padding: 0;
margin: -1px;
overflow: hidden;
clip: rect(0, 0, 0, 0);
white-space: nowrap;
border: 0;

Use o padrão acima para definir a classe sr-only. */


.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

