body {
    background: #f5f6f7;
    color: #1b1b32;
    font-family: Helvetica;
    margin: 0;
}

/*Faça com que o header ocupe toda a largura de seu contêiner pai, 
defina sua height como 50px e defina a background-color para #1b1b32. 
Em seguida, defina o display para usar o Flexbox.*/

/* (48 )Arrume o header, usando Flexbox para acrescentar espaço entre os elementos filhos e centralizá-los verticalmente.
Em seguida, deixe o header fixo na parte superior do viewport.
ocê deve dar ao elemento header um justify-content de space-between. */

header {
    width: 100%;
    height: 50px;
    background-color: #1b1b32;
    display: flex;
    justify-content: space-between;  /* (48)*/
    align-items: center;  /* (48)*/
    position: fixed;  /* (48)*/
    top: 0;   /* (48)*/
}

/*Uma propriedade útil de um SVG (gráficos vetoriais escaláveis) é o atributo path (caminho), 
que permite que a imagem seja dimensionada sem afetar a resolução da imagem resultante.
Atualmente, o img está assumindo que é o tamanho padrão, o que é muito grande. Para arrumar, 
dimensione a imagem usando o id como seletor e defina a largura width como max(100px, 18vw).*/

/*Como descrito no guia de estilo do freeCodeCamp, 
o logotipo deve manter uma proporção de 35 / 4 e um preenchimento (padding) ao redor do texto.
Primeiro, altere a background-color para #0a0a23 para ver o logotipo. 
Em seguida, use a propriedade aspect-ratio para definir a proporção desejada de 35 / 4. 
Por fim, adicione um padding de 0.4rem ao redor.*/

#logo {
    width: max(100px, 18vw);
    background-color: #0a0a23;
    aspect-ratio: 35 / 4;
    padding: 0.4rem;
}



/*Altere a cor da fonte h1 para #f1be32, 
e defina o tamanho da fonte para min(5vw, 1.2em).*/

h1 {
    color: #f1be32;
    font-size: min(5vw, 1.2em);
}

nav {
    width: 50%;
    max-width: 300px;
    height: 50px;
  }

/*Marque os elementos da lista não ordenados dentro dos elementos nav e use Flexbox para espaçar igualmente os elementos filhos.*/

nav > ul {
    display: flex;
    justify-content: space-evenly;
}

/*(45) Voltemos ao estilo da página. Selecione os elementos da lista dentro da barra de navegação, e dê a eles os seguintes estilos:

                    color: #dfdfe2;
                    margin: 0 0.2rem;
                    padding: 0.2rem;
                    display: block;

                    Você deve usar o seletor nav li ou nav > ul > li.

*/

nav > ul > li {
    color: #dfdfe2;
    margin: 0 0.2rem;
    padding: 0.2rem;
    display: block;

}



/* (46) No que se refere à acessibilidade visual, o contraste entre elementos é um fator fundamental. 
Por exemplo, o contraste entre o texto e o plano de fundo de um título deve ser pelo menos 4,5:1.
Altere a cor da fonte de todos os elementos "âncora" dentro dos elementos da lista
para algo com uma proporção de contraste de pelo menos 7:1.
Você deve dar ao elemento a uma propriedade color. */

/* (47) Para fazer com que os botões de navegação se pareçam mais com botões típicos, remova o sublinhado das tags de âncora.
Em seguida, crie um novo seletor direcionado aos elementos da lista de navegação, 
para que quando o cursor passe por cima deles, a cor de fundo e a cor do texto sejam alternados, 
e o cursor se torne um ponteiro. */

li > a {
    color: inherit; /*(46)*/
    text-decoration: none;  /*(47)*/
}

nav li:hover {
    background-color: #dfdfe2; /*(47)*/
    color: #1b1b32;
    cursor: pointer;
  }


/* O tipo de letra desempenha um papel importante na acessibilidade de uma página. 
Algumas fontes são mais fáceis de ler do que outras. 
Isso é especialmente verdadeiro em telas de baixa resolução.
Altere a fonte dos elementos h1 e h2 para Verdana e use outra fonte segura para a Web na família sans-serif como substituto.
Além disso, adicione um border-bottom de 4px solid #dfdfe2 aos elementos h2 para tornar as seções distintas. 
*Você deve definir o segundo valor da propriedade font-family para outra fonte sans-serif, fonte segura da web. Dica: eu escolheria Tahoma.*/

h1, h2 {
    font-family: Verdana, Tahoma;
}

h2 {
    border-bottom: 4px solid #dfdfe2;
}

/* Para prevenir repetição desnecessária, marque o pseudoelemento before do elemento p e dê a ele uma propriedade content de "Question #".
Você deve usar o seletor p::before. */

p::before {
    content: "Question #";
}

/* O texto .sr-only ainda está visível. Existe um padrão comum para ocultar visualmente o texto para que apenas os leitores de tela leiam.

Este padrão é para definir as seguintes propriedades do CSS:

position: absolute;
width: 1px;
height: 1px;
padding: 0;
margin: -1px;
overflow: hidden;
clip: rect(0, 0, 0, 0);
white-space: nowrap;
border: 0;

Use o padrão acima para definir a classe sr-only. */

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

